# To run the model, run the following command:
# python tempest.py --config /Users/duncan/Desktop/DPhil/TEMPEST/data/config/example_config.yaml
# This config file is used for testing the model and can be saved as a template for your own objects.

# General settings
silent_mode: false                  # Set to true when running batch jobs (suppresses most console output)
remote: true                       # Set to true when running on a remote server (suppresses plotting)

# File paths
shape_model_file: "500m_ico_sphere_80_facets.stl"  # Name of the shape model file in data/shape_models/
shape_model_directory: "data/shape_models/"

# Performance settings
n_jobs:                 16          # Number of CPU cores to use for parallel processing (default: 4, max: available cores)
chunk_size:             10        # Number of facets to process in each parallel batch

# Physical parameters
emissivity:             0.5         
albedo:                 0.5              
beaming_factor:         0.9

# TEMPEST standard solver parameters (only needed if using TEMPEST standard solver)
thermal_conductivity:   0.001       # W/(m·K) 
density:                1000.0      # kg/m³
specific_heat_capacity: 1500.0      # J/(kg·K)

# Thermprojrs solver parameters (only needed if using thermprojrs solver)
thermal_inertia:        50.0

# Model structure parameters
n_layers:               45          # Number of depth layers in thermal model - try increasing this if the model doesn't converge
convergence_method:     "mean"      # Method to determine convergence: 'mean' or 'max' temperature difference between days
convergence_target:     0.1         # Target temperature difference between days for convergence in K. Higher values will converge faster.
max_days:               20          # Maximum number of days to run simulation
min_days:               1           # Minimum number of days to run simulation

# Orbital and rotational parameters
solar_distance_au:      2           # TEMPEST treats the object as having a perfect circular orbit
solar_luminosity: 3.86420167e+26    # Watts (leave this for any solar system objects)
sunlight_direction: [1, 0, 0]       # Direction of the Sun relative to the object
rotation_period_hours:  10          # Rotation period of the object relative to the Sun
ra_degrees:             0           # Right ascension of the object's pole (0 is the vernal equinox)
dec_degrees:            90          # Declination of the object's pole (90 is the north pole)

# Advanced modelling options
include_shadowing: true             # Recommended to keep this as True for most cases
n_scatters: 0                       # Set to 0 to disable scattering. 1 or 2 is recommended for most cases. 3 is almost always unnecessary.
include_self_heating: false         # Whether to include thermal radiation between facets
scattering_lut: "lambertian.npy"    # Lambertian is the only option currently supported
emission_lut: "lambertian_epf.npy"  # Lambertian or Lommel-Seeliger are the only options currently supported
temp_solver: "tempest_standard"     # Options: "tempest_standard" or "thermprojrs_like"
vf_rays: 1000                       # Number of rays to use for view factor calculations. 1000 is recommended for most cases.

# Extra analysis options
calculate_visible_phase_curve: false   # Whether to calculate visible light phase curve (not thoroughly validated)
calculate_thermal_phase_curve: false   # Whether to calculate thermal phase curve (not thoroughly validated)

# Animation settings
animate_final_day_temp_distribution: true  # 3D animation of final day temperatures
animate_subfacets: false                   # Animate temperatures for sub-facets
subfacet_facet_index: 37                   # Parent facet index for sub-facet visualization
animate_shadowing: false                   # 3D animation showing insolation and shadowing
fixed_camera_theta: 1.0472      # Polar angle (radians) of camera direction
fixed_camera_phi: 0.7854        # Azimuth angle (radians) of camera direction
use_precomputed_viewed_temps: true   # Whether to use precomputed viewed-temperature per facet based on viewing geometry (phase effects of thermal emission)

# Plotting settings for individual facet properties 
plotted_facet_index: 1220                 # Index of facet to plot detailed temperature evolution
plot_insolation_curve: false              # Plot insolation for a facet
plot_initial_temp_histogram: false        # Plot initial temperature distribution of all facets
plot_final_day_all_layers_temp_distribution: false # Plot final day temperature distribution for all layers including subsurface
plot_final_day_comparison: false          # Plot final day temperature distribution against the same from previous run (if it exists)

# Plotting settings for phase curves
show_visible_phase_curve: false
save_visible_phase_curve_data: false
show_thermal_phase_curve: false
save_thermal_phase_curve_data: false

# Debugging
calculate_energy_terms: false             # Whether to calculate and store detailed energy balance terms (not thoroughly validated - very slow to run)
animate_secondary_radiation_view_factors: false # 3D animation showing secondary radiation view factors
animate_secondary_contributions: false    # 3D animation showing radiative self-heating contributions
plot_energy_terms: false                  # Plot energy balance terms

# Surface Roughness Model (kernel-based)
apply_kernel_based_roughness: true        # Master switch for kernel-based roughness
roughness_kernel: 'spherical_cap'         # Options: 'spherical_cap', 'fractal', ...
kernel_subfacets_count: 30               # Number of sub-facets per kernel patch
kernel_profile_angle_degrees: 90           # Controls curvature for 'spherical_cap' kernel
kernel_directional_bins: 200               # Number of dome directional bins for emission/scatter
kernel_dome_radius_factor: 100.0          # Scale factor for dome radius relative to parent facet
intra_facet_scatters: 2                   # Number of internal scattering iterations per depression
