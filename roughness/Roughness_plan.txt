High-Level Roughness Model Plan

Status: Steps 1–6 fully implemented and integrated into TEMPEST:
  • Config flags loaded and tested
  • SphericalCapKernel canonical mesh (N sub-facets) and dome (M bins) generation
  • Precomputed canonical view-factor matrices F_ss and F_sd cached by (kernel, N, φ, M)
  • ParentFacet.generate_spherical_depression: instantiate SubFacet objects, build facet-local dome, compute dome_rotation
  • Core intra-facet solver: E0_vis/E0_th assembly with shadowing, iterative visible scattering, one-bounce thermal self-heating, dome projection
  • Roughness ↔ parent coupling: dome-to-parent F_dp distribution of visible & thermal flux each timestep
  • Per-depression ThermalData created; per-subfacet conduction solved; area-weighted aggregation back to parent

Next Steps: Testing and Validation (Step 7)
1. Flat-Disc Sanity Check - passed. 
   1.1 Run with kernel_profile_angle_degrees ≈ 0 (flat disc) vs apply_kernel_based_roughness=False
   1.2 Verify identical parent-insolation curves and final-day temperatures

2. Energy Conservation Diagnostics
   2.1 At each timestep, track: total incident = absorbed + Σ(out_vis) + Σ(out_th)
   2.2 Add quick logging or asserts in process_intra_depression_energetics and parent coupling to flag imbalances

3. Performance Profiling & Optimization
   3.1 Profile run-time hot spots: MCRT view-factors, dome-to-parent coupling, subfacet calls
   3.2 Ideas for speed-ups:
      • Lower vf_rays for coarse tests; adaptive ray counts per facet
      • Vectorize per-facet loops; batch subfacet solves
      • Use numba on process_intra_depression_energetics
      • Cache parent_areas, dome_rotation, view-factors in compact structures
      • Early exit flat-disc case without radiosity solve

4. 1D Model Validation
   4.1 Compare parent and subfacet conduction vs established 1D thermal solver for a single facet
   4.2 Run roughness model on 1 parent facet with N subfacets; compare spatially averaged T(t)
   4.3 Confirm agreement to within <1% error

5. Phase‐Curve & Opposition Effect Tests
   5.1 Compute visible and thermal phase curves with and without roughness
   5.2 Check for opposition surge in visible brightness
   5.3 Validate against analytic Lambertian / Lommel-Seeliger expectations

6. BRDF & EPF Characterization
   6.1 Use sub-facet geometry & F_sd to derive effective BRDF and EPF LUTs
   6.2 Compare with lab-measured rough surface BRDF/EPF
   6.3 Calculate RMS slope from canonical mesh; compare to target φ and literature

7. Unit Tests & CI
   • Canonical mesh generation: N, φ consistency, near-equilateral triangles
   • F_ss and F_sd dimensions and simple integrals (sum to 1)
   • Idempotency: repeated generate_spherical_depression no side-effects
   • process_intra logic for toy kernels (N=1,2)
   • Flat vs smooth results equal for φ→0
   • Energy balance checks

8. Software Roadmap & Documentation
   8.1 Create high-level flowchart: modules → data flows → kernel interfaces
   8.2 Update README: describe roughness design, config parameters, kernel interface
   8.3 Write architecture doc: class diagrams, sequence of calls
   8.4 Clean up file structure: split view-factors, solvers, mesh utilities into separate packages
   8.5 Enforce best practices: logging, error handling, type hints

Optional Future Steps (from original doc)
• Implement additional kernels: fractal, Gaussian‐bump, user‐supplied meshes
• Anisotropic/specular scattering: extend F_ss/F_sd or plug-in BRDF functions
• Adaptive dome resolution: refine directional bins in high-gradient regions
• GPU‐accelerate view‐factor solves for large N
• Hybrid MCRT fallback for non‐Lambertian BRDFs
• Phase‐curve validation vs observational datasets
• Packaging & distribution: pip installable, CLI improvements

-- End of Plan --
